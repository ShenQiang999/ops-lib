apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  namespace: logcenter 
  name: logstash-shipper
spec:
  template:
    metadata:
      labels:
        app: logstash-shipper
      name: logstash-shipper
#      annotations:
#        prometheus.io/scrape: 'true'
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: monitor
                operator: NotIn
                values: 
                - admit
      containers:
      - image: en-us-public-ops-harbor-1.360in.com:4333/pinguo/logstash-shipper:v1.1
        resources:
          # TODO: Set memory limits when we've profiled the container for large
          # clusters, then set request = limit to keep this container in
          # guaranteed class. Currently, this container falls into the
          # "burstable" category so the kubelet doesn't backoff from restarting it.
          limits:
            memory: "1024Mi"
            cpu: "0.8" 
          requests:
            cpu: "0.1" 
            memory: "100Mi"
        livenessProbe:
          exec:
            command:
            - /bin/bash 
            - -c 
            - ps -ef |grep logstash
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/bash 
            - -c 
            - ps -ef |grep docker-entrypoint 
          initialDelaySeconds: 3
          timeoutSeconds: 5
        env:
        - name: LS_HEAP_SIZE 
          value: "800m"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        name: logstash-shipper
        volumeMounts:
        - mountPath: /data
          name: application-volume 
      hostPID: true
      imagePullSecrets:
      - name: pull-secret
      volumes:
      - name: application-volume
        hostPath:
          path: /data
          type: Directory
