apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elastic-with-kibana
  namespace: logcenter 
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch-with-kibana 
    spec:
      containers:
      - name: elasticsearch
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data 
          name: elasticsearch-storage 
          subPath: elasticsearch-k8s 
        image: en-us-public-ops-harbor-1.360in.com:4333/pinguo/logstash-elasticsearch-5.6.5:v2 
        resources:
          # TODO: Set memory limits when we've profiled the container for large
          # clusters, then set request = limit to keep this container in
          # guaranteed class. Currently, this container falls into the
          # "burstable" category so the kubelet doesn't backoff from restarting it.
          limits:
            memory: "100096Mi"
            cpu: "8" 
          requests:
            cpu: "1" 
            memory: "80048Mi"
        livenessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 4
#        readinessProbe:
#          httpGet:
#            path: /_cluster/health
#            port: 9200
#            scheme: HTTP
#          initialDelaySeconds: 3
#          timeoutSeconds: 5
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        command:
          - "/docker-entrypoint.sh"
        args:
          - "elasticsearch"
        ports:
        - containerPort: 9200 
          hostPort: 9200 
        - containerPort: 9300 
          hostPort: 9300 

      - name: kibana 
        image: en-us-public-ops-harbor-1.360in.com:4333/pinguo/logstash-kibana:v1
        livenessProbe:
          httpGet:
            path: /
            port: 5601 
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 5601 
            scheme: HTTP
          initialDelaySeconds: 3
          timeoutSeconds: 5
        env:
        - name: ELASTICSEARCH_URL
          value: 'http://localhost:9200'
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        command:
          - "/docker-entrypoint.sh"
        args:
          - "kibana"
        ports:
        - containerPort: 5601 
          hostPort: 5601 

      volumes:
      - name: elasticsearch-storage 
        hostPath:
          path: /data/
          type: Directory
      nodeSelector:
        type: logcenter 
      imagePullSecrets:
      - name: pull-secret 
