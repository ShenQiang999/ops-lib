FROM pingup/php:v1.0

# -----------------------------------------------------------------------------
# Make src dir
# -----------------------------------------------------------------------------
ENV HOME /home/worker
ENV SRC_DIR $HOME/src
RUN mkdir -p ${SRC_DIR}

# -----------------------------------------------------------------------------
# Configure, timezone
# -----------------------------------------------------------------------------
RUN ln -sf /usr/share/zoneinfo/Asia/Chongqing /etc/localtime

# -----------------------------------------------------------------------------
# Install hiredis(need by swoole)
# -----------------------------------------------------------------------------
RUN cd ${SRC_DIR} \
    && curl -LJ -o hiredis-0.13.3.tar.gz https://github.com/redis/hiredis/archive/v0.13.3.tar.gz \
    && tar zxvf hiredis-0.13.3.tar.gz \
    && cd hiredis-0.13.3 \
    && make \
    && make install \
    && echo "/usr/local/lib" > /etc/ld.so.conf.d/local.conf \
    && ldconfig \
    && rm -rf $SRC_DIR/hiredis-*

# -----------------------------------------------------------------------------
# Install ImageMagick(need by imagick)
# -----------------------------------------------------------------------------
RUN cd ${SRC_DIR} \
    && curl -LJ -o ImageMagick.tar.gz https://www.imagemagick.org/download/ImageMagick.tar.gz \
    && tar zxf ImageMagick.tar.gz \
    && rm -rf ImageMagick.tar.gz \
    && ImageMagickPath=`ls` \
    && cd ${ImageMagickPath} \
    && ./configure \
    && make \
    && make install \
    && rm -rf $SRC_DIR/ImageMagick*

# -----------------------------------------------------------------------------
# Install extensions By SOURCE
# -----------------------------------------------------------------------------
ENV swooleVersion 1.9.22
RUN set -xe \
        && buildDeps=" \
                     libcurl4-openssl-dev \
                     libssl-dev \
                     " \
        && apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \

    # install swoole    
    && curl -LJ -o swoole-${swooleVersion}.tar.gz https://github.com/swoole/swoole-src/archive/v${swooleVersion}.tar.gz \
    && mkdir -p swoole-${swooleVersion} \
    && tar -xf swoole-${swooleVersion}.tar.gz -C swoole-${swooleVersion} --strip-components=1 \
    && rm swoole-${swooleVersion}.tar.gz \
    && ( \
        cd swoole-${swooleVersion} \
        && phpize \
        && ./configure --with-php-config=/usr/local/bin/php-config --enable-async-redis --enable-openssl \
        && make -j \
        && make install \
    ) \
    && rm -r swoole-${swooleVersion} \
    
    # enable extensions
    && docker-php-ext-enable swoole \

    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps

# ------------------------------------------------------------------------------------
# Install extensions By PECL: yaml mongodb igbinary redis inotify yac imagick mycrypt
# ------------------------------------------------------------------------------------
RUN set -xe \
            && peclDeps=" \
                          libyaml-0-2 \
                          libmcrypt4 \
                        " \
            && peclDeps_Dev=" \
                              libyaml-dev \
                              libcurl4-openssl-dev \
                              libssl-dev \
                              libmcrypt-dev \
                            " \
                            
            && apt-get update && apt-get install -y $peclDeps $peclDeps_Dev --no-install-recommends && rm -rf /var/lib/apt/lists/* \
            
            # install extensions
            && pecl update-channels \
            && pecl install yaml \
            && pecl install mongodb \
            && pecl install igbinary \
            && echo yes | pecl install redis \
            && pecl install inotify \
            && pecl install channel://pecl.php.net/yac-2.0.2 \
            && pecl install imagick \
            && pecl install channel://pecl.php.net/mcrypt-1.0.0 \

            # enable extensions
            && docker-php-ext-enable yaml mongodb igbinary redis inotify yac imagick mcrypt \
            
            && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $peclDeps_Dev



ENTRYPOINT ["docker-php-entrypoint"]

##<autogenerated>##
CMD ["php", "-a"]
##</autogenerated>##